<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2019-01-01 at 23:23:09.
 */
class have_i_been_pwnedTest extends PHPUnit_Framework_TestCase {

    /**
     * @var have_i_been_pwned
     */
    protected
            $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new have_i_been_pwned;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @dataProvider Password_is_secure_Provider
     * @covers have_i_been_pwned::password_is_secure
     * @todo   Can the provider user commas with two variables instead of one array?
     */
    public function testPassword_is_secure($password_string, $password_result) {
        $hibp_result = $this->object->password_is_secure($password_string);
        $this->assertEquals($hibp_result, $password_result);
    }

    public function Password_is_secure_Provider() {
        return array(
            array('P@ssw0rd', FALSE),
            array('12345678', FALSE),
            array('L"ZSZ,("6a>B&xD+{`U2HnHB.!V:MF', TRUE),
            array('l7NtR6U2V1GKXC0CaPHbNQho2rTq3saUd9sSbUgrXiamcmHEAiraeFf4wFQHhq2SU9rdbHbPmAhIHi4w6010VEB6AYOtosgT2jSLugcFsrqGsuCPYVCtb6Dfn19JSXz5', TRUE),
        );
    }

    /**
     * @dataProvider Password_is_secure_Provider
     * @depends testPassword_is_secure
     * @covers have_i_been_pwned::get_user_information_string
     * @todo   Implement testGet_user_information_string().
     */
    public function testGet_user_information_string($password_string, $password_result) {
        $this->object->password_is_secure($password_string);
        $user_information_string = $this->object->get_user_information_string();
        if (TRUE === $password_result) {
            $this->assertEquals(FALSE, $user_information_string);
        } else {
            $this->assertNotEmpty($user_information_string);
        }
    }

}
